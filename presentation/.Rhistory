# Plot
p = plot_ly(x = ~stock[2], y = ~stock$Date, mode = 'lines', text = ~stock[2])
library(plotly)
# Plot
p = plot_ly(x = ~stock[2], y = ~stock$Date, mode = 'lines', text = ~stock[2])
p
# Plot
p = plot_ly(x = ~stock$Date, y = ~stock[, 2], mode = 'lines', text = ~stock[2])
p
# Plot
p = plot_ly(x = ~stock$Date, y = ~stock[, 2], mode = 'lines') %>%
add_trace(x = ~posit$Date, name = 'trace 2', mode = 'markers')
p
View(posit)
# Combine into one dataframe
stock$year = year(stock$Date)
library(lubridate)
# Combine into one dataframe
stock$year = year(stock$Date)
View(stock)
stock$week = week(stock$Date)
View(stock)
comb = merge.data.frame(posit[,c("week","year", "n_com", "pos", "neg")], stock, by=c("week", "year"))
View(comb)
View(posit)
comb = merge.data.frame(posit[,c("week","year", "n_com", "pos", "neg")], stock, by=c("week", "year"))
comb = comb %>% group_by("week","year") %>% do(drop(duplicated(c("n_com", "pos", "neg"))))
comb = comb %>% group_by("week","year") %>% do(drop(.[duplicated(c("n_com", "pos", "neg"]))))
comb = merge.data.frame(posit[,c("week","year", "n_com", "pos", "neg")], stock, by=c("Date"))
# Calculate weekly sum of comments and average score for positive and negative
posit = comm %>% group_by(week) %>% summarise(n_com = n(), pos = mean(com_positive[com_positive>0]),
neg = mean(com_positive[com_positive<0]))
comb = merge.data.frame(posit[,c("week","year", "n_com", "pos", "neg")], stock, by=c("Date"))
# Match weeks and dates
posit$year = floor(posit$week / 100)
posit$week = posit$week - posit$year *100
posit$Date = as.Date(paste(posit$year, posit$week, 5, sep="-"), "%Y-%U-%u")
comb = merge.data.frame(posit[,c("week","year", "n_com", "pos", "neg")], stock, by=c("Date"))
comb = merge.data.frame(posit[,c("week","year", "n_com", "pos", "neg")], stock, by="Date")
comb = merge.data.frame(posit[,c("week","year", "n_com", "pos", "neg", "Date")], stock, by="Date")
View(comb)
# Select stock perfomance
stock = raw_stock[c("Date", ticker)]
stock$Date = as.Date(stock$Date)
# Select comments related to stock
comm = final[final$ticker==ticker,]
# Calculate weekly sum of comments and average score for positive and negative
posit = comm %>% group_by(week) %>% summarise(n_com = n(), pos = mean(com_positive[com_positive>0]),
neg = mean(com_positive[com_positive<0]))
# Match weeks and dates
posit$year = floor(posit$week / 100)
posit$week = posit$week - posit$year *100
posit$Date = as.Date(paste(posit$year, posit$week, 1, sep="-"), "%Y-%U-%u")
# Start returns 4 weeks prior to first comment
start = min(posit$Date) - as.difftime(4, unit="weeks")
stock = stock[stock$Date>as.Date(start),]
# Combine into one dataframe
stock$year = year(stock$Date)
stock$week = week(stock$Date)
comb = merge.data.frame(posit[,c("week","year", "n_com", "pos", "neg", "Date")], stock, by="Date")
View(comb)
# Select stock perfomance
stock = raw_stock[c("Date", ticker)]
stock$Date = as.Date(stock$Date)
# Select comments related to stock
comm = final[final$ticker==ticker,]
View(comm)
# Calculate weekly sum of comments and average score for positive and negative
posit = comm %>% group_by(week) %>% summarise(n_com = n(), pos = mean(com_positive[com_positive>0]),
neg = mean(com_positive[com_positive<0]), mindate=min(Date), maxdate=max(Date))
# Calculate weekly sum of comments and average score for positive and negative
posit = comm %>% group_by(week) %>% summarise(n_com = n(), pos = mean(com_positive[com_positive>0]),
neg = mean(com_positive[com_positive<0]), mindate=min(com_date), maxdate=max(com_date))
# Calculate weekly sum of comments and average score for positive and negative
posit = comm %>% group_by(week) %>% summarise(n_com = n(), pos = mean(com_positive[com_positive>0]),
neg = mean(com_positive[com_positive<0]), mindate=min(as.Daet(com_date)),
maxdate=max(as.Date(com_date)))
# Calculate weekly sum of comments and average score for positive and negative
posit = comm %>% group_by(week) %>% summarise(n_com = n(), pos = mean(com_positive[com_positive>0]),
neg = mean(com_positive[com_positive<0]), mindate=min(as.Date(com_date)),
maxdate=max(as.Date(com_date)))
View(posit)
# Match weeks and dates
posit$year = floor(posit$week / 100)
posit$week = posit$week - posit$year *100
posit$Date = as.Date(paste(posit$year, posit$week, 1, sep="-"), "%Y-%U-%u")
View(posit)
week(as.Date("2018-08-08"))
week(as.Date("2018-08-09"))
week(as.Date("2018-08-13"))
posit$Date = posit$mindate
View(posit)
# Start returns 4 weeks prior to first comment
start = min(posit$Date) - as.difftime(4, unit="weeks")
stock = stock[stock$Date>as.Date(start),]
# Combine into one dataframe
stock$year = year(stock$Date)
stock$week = week(stock$Date)
comb = merge.data.frame(posit[,c("week","year", "n_com", "pos", "neg", "Date")], stock, by="Date")
View(comb)
comb = merge.data.frame(posit[,c("week","year", "n_com", "pos", "neg", "Date")], stock, by="Date", all.x = TRUE)
View(comb)
# Select stock perfomance
stock = raw_stock[c("Date", ticker)]
stock$Date = as.Date(stock$Date)
comb = merge.data.frame(posit[,c("week","year", "n_com", "pos", "neg", "Date")], stock, by="Date", all.x = TRUE)
# Select stock perfomance
stock = raw_stock[c("Date", ticker)]
stock$Date = as.Date(stock$Date)
# Start returns 4 weeks prior to first comment
start = min(posit$Date) - as.difftime(4, unit="weeks")
stock = stock[stock$Date>as.Date(start),]
comb = merge.data.frame(posit[,c("week","year", "n_com", "pos", "neg", "Date")], stock, by="Date", all.x = TRUE)
comb = merge.data.frame(posit[,c("week","year", "n_com", "pos", "neg", "Date")], stock, by="Date", all.y = TRUE)
View(comb)
comb = merge.data.frame(posit[,c("week","year", "n_com", "pos", "neg", "Date")], stock, by="Date", all = TRUE)
# Select stock perfomance
stock = raw_stock[c("Date", ticker)]
stock$Date = as.Date(stock$Date)
# Select comments related to stock
comm = final[final$ticker==ticker,]
# Calculate weekly sum of comments and average score for positive and negative
posit = comm %>% group_by(week) %>% summarise(n_com = n(), pos = mean(com_positive[com_positive>0]),
neg = mean(com_positive[com_positive<0]), mindate=min(as.Date(com_date)),
maxdate=max(as.Date(com_date)))
# Match weeks and dates
posit$year = floor(posit$week / 100)
posit$week = posit$week - posit$year *100
posit$Date = posit$mindate
# Start returns 4 weeks prior to first comment
start = min(posit$Date) - as.difftime(4, unit="weeks")
stock = stock[stock$Date>as.Date(start),]
colnames(stock) = c("Date", "Price")
comb = merge.data.frame(posit[,c("week","year", "n_com", "pos", "neg", "Date")], stock, by="Date", all = TRUE)
View(stock)
# Plot
p = plot_ly(x = ~comb$Date, y = ~comb$Price, mode = 'lines') %>%
add_trace(x = ~comb$Date[comb$n_com!=0], name = 'trace 2', mode = 'markers')
p
# Plot
p = plot_ly(x = ~comb$Date, y = ~comb$Price, mode = 'lines') %>%
add_trace(x = ~comb$Date[comb$n_com!=0], name = 'trace 2', mode = 'line+markers')
p
# Plot
p = plot_ly(x = ~comb$Date, y = ~comb$Price, mode = 'lines') %>%
add_trace(x = ~comb$Date[comb$n_com!=0], name = 'trace 2', mode = 'line+markers')
p
# Plot
p = plot_ly(x = ~comb$Date, y = ~comb$Price, mode = 'lines') %>%
add_trace(x = ~comb$Date[comb$n_com!=0], y = ~comb$Price[comb$n_com!=0], name = 'trace 2', mode = 'lines+markers')
p
# Plot
p = plot_ly(x = ~comb$Date, y = ~comb$Price, mode = 'lines', name = 'trace 0', type = 'scatter') %>%
add_trace(x = ~comb$Date[comb$n_com!=0], y = ~comb$Price[comb$n_com!=0], mode = 'lines+markers')
p
# Plot
p = plot_ly(x = ~comb$Date, y = ~comb$Price, mode = 'lines', type = 'scatter') %>%
add_trace(x = ~comb$Date[comb$n_com!=0], y = ~comb$Price[comb$n_com!=0], mode = 'lines+markers')
# Plot
p = plot_ly(x = ~comb$Date, y = ~comb$Price, mode = 'lines', type = 'scatter') %>%
add_trace(x = ~comb$Date[comb$n_com!=0], y = ~comb$Price[comb$n_com!=0], mode = 'lines+markers',
text = paste0("N of comments: ", comb$n_com[comb$n_com!=0]))
p
# Plot
p = plot_ly(x = ~comb$Date, y = ~comb$Price, mode = 'lines', type = 'scatter') %>%
add_trace(x = ~comb$Date[comb$n_com!=0], y = ~comb$Price[comb$n_com!=0], mode = 'markers',
text = paste0("N of comments: ", comb$n_com[comb$n_com!=0]))
p
# Plot
p = plot_ly(x = ~comb$Date, y = ~comb$Price, mode = 'lines', name = paste0(ticker," price"), type = 'scatter') %>%
add_trace(x = ~comb$Date[comb$n_com!=0], y = ~comb$Price[comb$n_com!=0], mode = 'markers', name = "N of Comments"
text = paste0("N of comments: ", comb$n_com[comb$n_com!=0]))
# Plot
p = plot_ly(x = ~comb$Date, y = ~comb$Price, mode = 'lines', name = paste0(ticker," price"), type = 'scatter') %>%
add_trace(x = ~comb$Date[comb$n_com!=0], y = ~comb$Price[comb$n_com!=0], mode = 'markers', name = "N of Comments",
text = paste0("N of comments: ", comb$n_com[comb$n_com!=0]))
p
# Plot
p = plot_ly(x = ~comb$Date, y = ~comb$Price, mode = 'lines', name = paste0(ticker," price"), type = 'scatter') %>%
add_trace(x = ~comb$Date[comb$n_com!=0], y = ~comb$Price[comb$n_com!=0], mode = 'markers', name = "Comments",
text = paste0("N of comments: ", comb$n_com[comb$n_com!=0]))
p
p2 = plot_ly(x= ~comb$Date, y = ~comb$n_com, mode = 'bars', name = paste0(ticker," price"), type = 'bar')
p2
p2 = plot_ly(x= ~comb$Date, y = ~comb$n_com, mode = 'bars', name = 'Number of comments', type = 'bar')
p3 = plot_ly(x= ~comb$Date, y = ~comb$pos, mode = 'bars', name = 'Positivity Score (pos)', type = 'bar')
p4 = plot_ly(x= ~comb$Date, y = ~comb$neg, mode = 'bars', name = 'Positivity Score (neg)', type = 'bar')
subplot(p1,p2,p3,p4)
# Plot
p1 = plot_ly(x = ~comb$Date, y = ~comb$Price, mode = 'lines', name = paste0(ticker," price"), type = 'scatter') %>%
add_trace(x = ~comb$Date[comb$n_com!=0], y = ~comb$Price[comb$n_com!=0], mode = 'markers', name = "Comments",
text = paste0("N of comments: ", comb$n_com[comb$n_com!=0]))
subplot(p1,p2,p3,p4)
subplot(p1,p2,p3,p4, nrows = 4)
subplot(p1,p2,p3,p4, nrows = 4, shareX = TRUE)
p3 = plot_ly(x= ~comb$Date, y = ~comb$pos, mode = 'bars', name = 'Positivity Score (pos)', type = 'bar') %>%
layout(yaxis = list(range=c(0,1)))
subplot(p1,p2,p3,p4, nrows = 4, shareX = TRUE)
p4 = plot_ly(x= ~comb$Date, y = ~comb$neg, mode = 'bars', name = 'Positivity Score (neg)', type = 'bar') %>%
layout(yaxis = list(range=c(-1,0)))
subplot(p1,p2,p3,p4, nrows = 4, shareX = TRUE)
p2 = plot_ly(x= ~comb$Date, y = ~comb$n_com, mode = 'bars', name = 'Number of comments', type = 'bar',
marker = list(size = 10, color = 'rgba(255, 182, 193, .9)'))
subplot(p1,p2,p3,p4, nrows = 4, shareX = TRUE)
p2 = plot_ly(x= ~comb$Date, y = ~comb$n_com, name = 'Number of comments', type = 'bar',
marker = list(size = 10, color = 'steelblue2'))
subplot(p1,p2,p3,p4, nrows = 4, shareX = TRUE)
p2 = plot_ly(x= ~comb$Date, y = ~comb$n_com, name = 'Number of comments', type = 'bar',
marker = list(size = 10, color = 'Steelblue2'))
subplot(p1,p2,p3,p4, nrows = 4, shareX = TRUE)
p2 = plot_ly(x= ~comb$Date, y = ~comb$n_com, name = 'Number of comments', type = 'bar',
marker = list(size = 10, color = 'blue'))
subplot(p1,p2,p3,p4, nrows = 4, shareX = TRUE)
p2 = plot_ly(x= ~comb$Date, y = ~comb$n_com, name = 'Number of comments', type = 'bar',
marker = list(size = 10, color = 'dodgerblue4'))
subplot(p1,p2,p3,p4, nrows = 4, shareX = TRUE)
p2 = plot_ly(x= ~comb$Date, y = ~comb$n_com, name = 'Number of comments', type = 'bar',
marker = list(size = 10, color = 'Blues'[4]))
subplot(p1,p2,p3,p4, nrows = 4, shareX = TRUE)
p2 = plot_ly(x= ~comb$Date, y = ~comb$n_com, name = 'Number of comments', type = 'bar',
marker = list(size = 10, color = 'steelblue'))
subplot(p1,p2,p3,p4, nrows = 4, shareX = TRUE)
p3 = plot_ly(x= ~comb$Date, y = ~comb$pos, name = 'Positivity Score (pos)', type = 'bar',
marker = list(size = 10, color = 'orange')) %>%
layout(yaxis = list(range=c(0,1)))
subplot(p1,p2,p3,p4, nrows = 4, shareX = TRUE)
View(comb)
posit[!is.na(posit$n_com) & is.na(posit$pos), "pos" ] = 0
View(posit)
# Select stock perfomance
stock = raw_stock[c("Date", ticker)]
stock$Date = as.Date(stock$Date)
# Select comments related to stock
comm = final[final$ticker==ticker,]
# Calculate weekly sum of comments and average score for positive and negative
posit = comm %>% group_by(week) %>% summarise(n_com = n(), pos = mean(com_positive[com_positive>0]),
neg = mean(com_positive[com_positive<0]), mindate=min(as.Date(com_date)),
maxdate=max(as.Date(com_date)))
posit[!is.na(posit$n_com) & is.na(posit$pos), "pos" ] = 0 # Change NA to zero
posit[!is.na(posit$n_com) & is.na(posit$neg), "neg" ] = 0
# Match weeks and dates
posit$year = floor(posit$week / 100)
posit$week = posit$week - posit$year *100
posit$Date = posit$mindate
# Start returns 4 weeks prior to first comment
start = min(posit$Date) - as.difftime(4, unit="weeks")
stock = stock[stock$Date>as.Date(start),]
colnames(stock) = c("Date", "Price")
comb = merge.data.frame(posit[,c("week","year", "n_com", "pos", "neg", "Date")], stock, by="Date", all = TRUE)
# Plot
p1 = plot_ly(x = ~comb$Date, y = ~comb$Price, mode = 'lines', name = paste0(ticker," price"), type = 'scatter') %>%
add_trace(x = ~comb$Date[comb$n_com!=0], y = ~comb$Price[comb$n_com!=0], mode = 'markers', name = "Comments",
text = paste0("N of comments: ", comb$n_com[comb$n_com!=0]))
p2 = plot_ly(x= ~comb$Date, y = ~comb$n_com, name = 'Number of comments', type = 'bar',
marker = list(size = 10, color = 'steelblue'))
p3 = plot_ly(x= ~comb$Date, y = ~comb$pos, name = 'Positivity Score (pos)', type = 'bar',
marker = list(size = 10, color = 'orange')) %>%
layout(yaxis = list(range=c(0,1)))
p4 = plot_ly(x= ~comb$Date, y = ~comb$neg, name = 'Positivity Score (neg)', type = 'bar') %>%
layout(yaxis = list(range=c(-1,0)))
subplot(p1,p2,p3,p4, nrows = 4, shareX = TRUE)
p4 = plot_ly(x= ~comb$Date, y = ~comb$neg, name = 'Positivity Score (neg)', type = 'bar',
marker = list(size = 10, color = 'gray')) %>%
layout(yaxis = list(range=c(-1,0)))
subplot(p1,p2,p3,p4, nrows = 4, shareX = TRUE)
p4 = plot_ly(x= ~comb$Date, y = ~comb$neg, name = 'Positivity Score (neg)', type = 'bar',
marker = list(size = 10, color = 'gray')) %>%
layout(yaxis = list(range=c(-1,0), title = "Check"))
subplot(p1,p2,p3,p4, nrows = 4, shareX = TRUE)
subplot(p1,p2,p3,p4, nrows = 4, shareX = TRUE, titleX = FALSE, titleY = TRUE)
p4 = plot_ly(x= ~comb$Date, y = ~comb$neg, name = 'Positivity Score (neg)', type = 'bar',
marker = list(size = 10, color = 'gray')) %>%
layout(yaxis = list(range=c(-1,0), title = hex("263A")))
library(stringi)
p4 = plot_ly(x= ~comb$Date, y = ~comb$neg, name = 'Positivity Score (neg)', type = 'bar',
marker = list(size = 10, color = 'gray')) %>%
layout(yaxis = list(range=c(-1,0), title = stri_unescape_unicode("263A")))
subplot(p1,p2,p3,p4, nrows = 4, shareX = TRUE, titleX = FALSE, titleY = TRUE)
p4 = plot_ly(x= ~comb$Date, y = ~comb$neg, name = 'Positivity Score (neg)', type = 'bar',
marker = list(size = 10, color = 'gray')) %>%
layout(yaxis = list(range=c(-1,0), title = stri_unescape_unicode("&#x1F601;")))
subplot(p1,p2,p3,p4, nrows = 4, shareX = TRUE, titleX = FALSE, titleY = TRUE)
p4 = plot_ly(x= ~comb$Date, y = ~comb$neg, name = 'Positivity Score (neg)', type = 'bar',
marker = list(size = 10, color = 'gray')) %>%
layout(yaxis = list(range=c(-1,0), title = stri_unescape_unicode("&#x1F601")))
subplot(p1,p2,p3,p4, nrows = 4, shareX = TRUE, titleX = FALSE, titleY = TRUE)
p4 = plot_ly(x= ~comb$Date, y = ~comb$neg, name = 'Positivity Score (neg)', type = 'bar',
marker = list(size = 10, color = 'gray')) %>%
layout(yaxis = list(range=c(-1,0), title = stri_unescape_unicode("\u+1F600	")))
p4 = plot_ly(x= ~comb$Date, y = ~comb$neg, name = 'Positivity Score (neg)', type = 'bar',
marker = list(size = 10, color = 'gray')) %>%
layout(yaxis = list(range=c(-1,0), title = stri_unescape_unicode("\\u+1F600	")))
p4 = plot_ly(x= ~comb$Date, y = ~comb$neg, name = 'Positivity Score (neg)', type = 'bar',
marker = list(size = 10, color = 'gray')) %>%
layout(yaxis = list(range=c(-1,0), title = stri_unescape_unicode("u+1F600	")))
subplot(p1,p2,p3,p4, nrows = 4, shareX = TRUE, titleX = FALSE, titleY = TRUE)
a <- "\\U00B5"
stri_unescape_unicode(gsub("\\U","\\u",a, fixed=TRUE))
gsub("\\U","\\u",a, fixed=TRUE)
p4 = plot_ly(x= ~comb$Date, y = ~comb$neg, name = 'Positivity Score (neg)', type = 'bar',
marker = list(size = 10, color = 'gray')) %>%
layout(yaxis = list(range=c(-1,0), title = stri_unescape_unicode("\\u1F600")))
subplot(p1,p2,p3,p4, nrows = 4, shareX = TRUE, titleX = FALSE, titleY = TRUE)
p4 = plot_ly(x= ~comb$Date, y = ~comb$neg, name = 'Positivity Score (neg)', type = 'bar',
marker = list(size = 10, color = 'gray')) %>%
layout(yaxis = list(range=c(-1,0), title = stri_unescape_unicode("\\u\+1F600")))
p4 = plot_ly(x= ~comb$Date, y = ~comb$neg, name = 'Positivity Score (neg)', type = 'bar',
marker = list(size = 10, color = 'gray')) %>%
layout(yaxis = list(range=c(-1,0), title = stri_unescape_unicode("u+1F600")))
subplot(p1,p2,p3,p4, nrows = 4, shareX = TRUE, titleX = FALSE, titleY = TRUE)
p4 = plot_ly(x= ~comb$Date, y = ~comb$neg, name = 'Positivity Score (neg)', type = 'bar',
marker = list(size = 10, color = 'gray')) %>%
layout(yaxis = list(range=c(-1,0), title = stri_unescape_unicode("\u263A")))
subplot(p1,p2,p3,p4, nrows = 4, shareX = TRUE, titleX = FALSE, titleY = TRUE)
p4 = plot_ly(x= ~comb$Date, y = ~comb$neg, name = 'Positivity Score (neg)', type = 'bar',
marker = list(size = 10, color = 'gray')) %>%
layout(yaxis = list(range=c(-1,0), title = stri_unescape_unicode("\u263A"), size=12))
subplot(p1,p2,p3,p4, nrows = 4, shareX = TRUE, titleX = FALSE, titleY = TRUE)
p4 = plot_ly(x= ~comb$Date, y = ~comb$neg, name = 'Positivity Score (neg)', type = 'bar',
marker = list(size = 10, color = 'gray')) %>%
layout(yaxis = list(range=c(-1,0), title = stri_unescape_unicode("\u263A"), size=20))
subplot(p1,p2,p3,p4, nrows = 4, shareX = TRUE, titleX = FALSE, titleY = TRUE)
p4 = plot_ly(x= ~comb$Date, y = ~comb$neg, name = 'Positivity Score (neg)', type = 'bar',
marker = list(size = 10, color = 'gray')) %>%
layout(yaxis = list(range=c(-1,0), title = stri_unescape_unicode("\u263A"),
titlefont = list(size=18)))
subplot(p1,p2,p3,p4, nrows = 4, shareX = TRUE, titleX = FALSE, titleY = TRUE)
p4 = plot_ly(x= ~comb$Date, y = ~comb$neg, name = 'Positivity Score (neg)', type = 'bar',
marker = list(size = 10, color = 'gray')) %>%
layout(yaxis = list(range=c(-1,0), title = stri_unescape_unicode("\u263A"),
titlefont = list(size=20)))
subplot(p1,p2,p3,p4, nrows = 4, shareX = TRUE, titleX = FALSE, titleY = TRUE)
p4 = plot_ly(x= ~comb$Date, y = ~comb$neg, name = 'Positivity Score (neg)', type = 'bar',
marker = list(size = 10, color = 'gray')) %>%
layout(yaxis = list(range=c(-1,0), title = stri_unescape_unicode("\u263A"),
titlefont = list(size=30)))
subplot(p1,p2,p3,p4, nrows = 4, shareX = TRUE, titleX = FALSE, titleY = TRUE)
p4 = plot_ly(x= ~comb$Date, y = ~comb$neg, name = 'Positivity Score (neg)', type = 'bar',
marker = list(size = 10, color = 'gray')) %>%
layout(yaxis = list(range=c(-1,0))
subplot(p1,p2,p3,p4, nrows = 4, shareX = TRUE, titleX = FALSE, titleY = TRUE)
}
p4 = plot_ly(x= ~comb$Date, y = ~comb$neg, name = 'Positivity Score (neg)', type = 'bar',
marker = list(size = 10, color = 'gray')) %>%
layout(yaxis = list(range=c(-1,0)))
subplot(p1,p2,p3,p4, nrows = 4, shareX = TRUE, titleX = FALSE, titleY = FALSE)
# Get tickers
tickers = unique(final$ticker)
# Get tickers
tickers = as.character(unique(final$ticker))
runApp()
plotComment = function(ticker){
# Select stock perfomance
stock = raw_stock[c("Date", ticker)]
stock$Date = as.Date(stock$Date)
# Select comments related to stock
comm = final[final$ticker==ticker,]
# Calculate weekly sum of comments and average score for positive and negative
posit = comm %>% group_by(week) %>% summarise(n_com = n(), pos = mean(com_positive[com_positive>0]),
neg = mean(com_positive[com_positive<0]), mindate=min(as.Date(com_date)),
maxdate=max(as.Date(com_date)))
posit[!is.na(posit$n_com) & is.na(posit$pos), "pos" ] = 0 # Change NA to zero
posit[!is.na(posit$n_com) & is.na(posit$neg), "neg" ] = 0
# Match weeks and dates
posit$year = floor(posit$week / 100)
posit$week = posit$week - posit$year *100
posit$Date = posit$mindate
# Start returns 4 weeks prior to first comment
start = min(posit$Date) - as.difftime(4, unit="weeks")
stock = stock[stock$Date>as.Date(start),]
colnames(stock) = c("Date", "Price")
comb = merge.data.frame(posit[,c("week","year", "n_com", "pos", "neg", "Date")], stock, by="Date", all = TRUE)
# Plot
p1 = plot_ly(x = ~comb$Date, y = ~comb$Price, mode = 'lines', name = paste0(ticker," price"), type = 'scatter') %>%
add_trace(x = ~comb$Date[comb$n_com!=0], y = ~comb$Price[comb$n_com!=0], mode = 'markers', name = "Comments",
text = paste0("N of comments: ", comb$n_com[comb$n_com!=0]))
p2 = plot_ly(x= ~comb$Date, y = ~comb$n_com, name = 'Number of comments', type = 'bar',
marker = list(size = 10, color = 'steelblue'))
p3 = plot_ly(x= ~comb$Date, y = ~comb$pos, name = 'Positivity Score (pos)', type = 'bar',
marker = list(size = 10, color = 'orange')) %>%
layout(yaxis = list(range=c(0,1)))
p4 = plot_ly(x= ~comb$Date, y = ~comb$neg, name = 'Positivity Score (neg)', type = 'bar',
marker = list(size = 10, color = 'gray')) %>%
layout(yaxis = list(range=c(-1,0)))
subplot(p1,p2,p3,p4, nrows = 4, shareX = TRUE, titleX = FALSE, titleY = FALSE)
}
runApp()
# Aggregate data
data = final %>% group_by(week, ticker) %>% summarize(Flag = last(lead_pnd_up),
Np = n(),
PS = mean(com_positive))
View(data)
data = data[complete.cases(data)]
data = data[complete.cases(data),]
View(data)
View(final)
data$Flag = as.numeric(data$Flag)
View(data)
# Aggregate data
data = final %>% group_by(week, ticker) %>% summarize(Flag = last(lead_pnd_up),
Np = n(),
PS = mean(com_positive))
data = data[data$Flag!="",]
View(data)
# Aggregate data
data = final %>% group_by(week, ticker) %>% summarize(Flag = last(lead_pnd_up),
Np = n(),
PS = mean(com_positive))
data = data[data$Flag!="",]
logit1 = glm(Flag ~ Np + PS,
family = "binomial",
data = data)
summary(logit1)
runApp()
runApp()
runApp()
#Specification 2
# Aggregate data
data = final %>% group_by(week, ticker) %>% summarize(Flag = last(lead_pnd_up),
Np = n(),
PS = mean(com_positive))
data = data[data$Flag!="",]
# Change PS to categorical
data$PS = sapply(data$PS, ifelse(data$PS>0, 1, -1))
# Change PS to categorical
data$PS[data$PS>0] = 1
#Specification 1
# Aggregate data
data = final %>% group_by(week, ticker) %>% summarize(Flag = last(lead_pnd_up),
Np = n(),
PS = mean(com_positive))
data = data[data$Flag!="",]
logit1 = glm(Flag ~ Np + PS,
family = "binomial",
data = data)
#Specification 2
# Aggregate data
data = final %>% group_by(week, ticker) %>% summarize(Flag = last(lead_pnd_up),
Np = n(),
PS = mean(com_positive))
data = data[data$Flag!="",]
# Change PS to categorical
data$PS[data$PS>0] = 1
data$PS[data$PS<0] = -1
logit2 = glm(Flag ~ Np + PS,
family = "binomial",
data = data)
summary(logit2)
#Specification 3
# Aggregate data
data = final %>% group_by(week, ticker) %>% summarize(Flag = last(lead_pnd_up),
Np = n(),
PS = mean(com_positive),
R = last(return))
data = data[data$Flag!="",]
# Change PS to categorical
data$PS[data$PS>0] = 1
data$PS[data$PS<0] = -1
logit3 = glm(Flag ~ Np + PS,
family = "binomial",
data = data)
logit3 = glm(Flag ~ Np + PS + R,
family = "binomial",
data = data)
summary(logit3)
# Aggregate data
data = final %>% group_by(week, ticker, top_post) %>% summarize(Flag = last(lead_pnd_up),
Np = n(),
PS = mean(com_positive),
R = last(return))
data = data[data$Flag!="",]
# Change PS to categorical
data$PS[data$PS>0] = 1
data$PS[data$PS<0] = -1
# Create interaction variables
data$m1TP_Np = (1-data$top_post) * data$Np
data$m1TP_PS = (1-data$top_post) * data$PS
data$TP_Np = data$top_post * data$Np
data$TP_PS = 1-data$top_post * data$PS
logit4 = glm(Flag ~ m1TP_Np + m1TP_PS + TP_Np + TP_PS + R,
family = "binomial",
data = data)
summary(logit4)
logit4 = glm(Flag ~ m1TP_Np + m1TP_PS + TP_Np + TP_PS,
family = "binomial",
data = data)
summary(logit4)
data = final
data$log_lead_ret = log(data$lead_return)
data = final
data = data[!is.na(data$return),]
data$log_lead_ret = log(data$lead_return)
data = final
data = data[!is.na(data$return),]
View(data)
data = final
data = data[!is.na(data$return),]
data$log_lead_ret = log(data$lead_return + 1e-10)
data = final
data = data[!is.na(data$lead_return),]
data$log_lead_ret = log(data$lead_return + 1e-10)
data = final
data = data[!is.na(data$lead_return),]
data$log_lead_ret = log((data$lead_return + 1e-10))
data[is.na(data$log_lead_ret),]
data$log_lead_ret = log((1 + data$lead_return))
data = final %>% group_by(week, ticker) %>% summarise(lead_return=last(lead_return), Np = n(), PS = mean(com_positive))
data = data[!is.na(data$lead_return),]
data$log_lead_ret = log((1 + data$lead_return))
plot(data$log_lead_ret, data$Np)
plot(data$log_lead_ret, data$PS)
runApp()
